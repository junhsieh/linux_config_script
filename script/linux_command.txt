Start a tmux session:
# tmux a -d
# tmux

To create a locked user account:
# useradd git -m -c 'git user'

Unlock the account by issuing the passwd command to assign a password and set password aging guidelines:
# passwd git

To delete a user:
# userdel -r olduser

Add the apache user to the dev group:
# usermod -a -G dev apache

Remove a user from a group:
# gpasswd -d user group

Add a New Group
# groupadd GROUPNAME

Print the groups a user is in:
# groups USERNAME

Change a User's Primary Group
# usermod -g GROUPNAME USERNAME

View a User's Group Assignments
# id USERNAME
# id -Gn USERNAME

Find the modified files within the last 30 minutes:
# find . -mmin -30

Find the modified files within the last 3 days:
# find . -mtime -3

Find the modified files more than 3 days ago:
# find . -mtime +3

Find the modified files exactly 3 days ago:
# find . -mtime 3

Check to see if "other user" has any read, write, and execute permissions:
# find . -perm /007 | xargs -I {} ls -la {}

You can see if the repositories that you need are installed and enabled by running the following command:
# yum repolist

Some repositories, like Remi, are disabled by default. To list disabled repositories, run the following command:
# yum repolist disabled

List installed packages:
# yum list installed | grep -i php

To change Security-Enhanced Linux (SELinux) security context permission:
# chcon -R --type=httpd_sys_content_t /var/www/html/magento19
Or for read and write permission:
# chcon -R -t httpd_sys_rw_content_t /var/www/html/magento19/app/etc

# chcon -t httpd_log_t /var/log/php_errors.log
Or
# chcon -u system_u -t httpd_log_t /var/log/php_errors.log

To put SELinux (Security-Enhanced Linux) in permissive mode:
# setenforce 0

To put SELinux (Security-Enhanced Linux) in enforcing mode:
# setenforce 1

# getenforce
# sestatus -v
# sestatus -b

Open port 80 firewall access:
# firewall-cmd --permanent --zone=public --add-port=80/tcp
# firewall-cmd --reload
or
# systemctl restart firewalld.service

To get a list of bash key bindings:
# bind -P

Create MySQL database:
mysql> CREATE DATABASE mydb DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;

Grant MySQL permission:
mysql> GRANT ALL PRIVILEGES ON *.* TO 'test'@'192.168.0.%' IDENTIFIED BY '123456';
mysql> FLUSH PRIVILEGES;

Restore MySQL database:
# mysql --default-character-set=utf8 -u user_name -p -P 3306 db_name < db_dumped.sql

Add New Rule to firewalld to allow access to MySQL:

# firewall-cmd --permanent --zone=trusted --add-source=127.0.0.1/32
# firewall-cmd --permanent --zone=trusted --add-port=3306/tcp
# firewall-cmd --reload
# firewall-cmd --zone=trusted --list-all

Set up MySQL configuration:
# vim ~/.my.cnf

[client]
host = localhost
port = 3306
user = root
password = MyPassword

To see open listen ports and socket information:
# netstat -tulpn | grep :80

To see a list of the IPs that have the most connections to port 80:
# netstat -tn 2>/dev/null | grep ':80 ' | awk '{print $5}' | cut -f1 -d: | sort | uniq -c | sort -rn | head

Check for SYN flood attacks:
# netstat -nap | grep SYN | wc -l

Firewall Block IP address:
# firewall-cmd --state
# firewall-cmd --list-all
# firewall-cmd --get-zones
# firewall-cmd --get-default-zone
# firewall-cmd --get-active-zones
# firewall-cmd --get-services

# firewall-cmd --zone=public --add-rich-rule='rule family="ipv4" source address="1.2.3.4" reject'
# firewall-cmd --zone=public --remove-rich-rule='rule family="ipv4" source address="1.2.3.4" reject'

# firewall-cmd --reload
# firewall-cmd --complete-reload

Use Mosh instead of SSH:
# firewall-cmd --permanent --zone=public --add-port=60000-60020/udp
# firewall-cmd --reload
# mosh --ssh="ssh -i myserver.pem" centos@1.2.3.4

Get Swap Information:
# cat /etc/fstab | grep -i swap
# cat /proc/meminfo | grep -i swap
# cat /proc/sys/vm/swappiness

List all svn properties on files, dirs, or revisions:
# svn proplist /www/drupal6/sites -R

Print the value of a svn property on files, dirs, or revisions recursively:
# svn propget svn:ignore /www/drupal6/sites -R

Edit a svn property with an external editor:
# svn propedit svn:ignore /www/drupal6/sites
*.local
*.com
*.ca

To remove the svn:ignore property on current directory:
# svn propdel svn:ignore .

To remove the svn:ignore property recursively:
# svn propdel svn:ignore -R

